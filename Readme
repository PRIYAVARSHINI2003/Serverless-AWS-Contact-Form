

This is a modern, fully **serverless** solution for a website contact form. It handles form submissions reliably, provides automatic email notifications, and operates on a **pay-per-use model** with zero server maintenance overhead. The entire architecture is highly scalable and deployed on **Amazon Web Services (AWS)**.

## Workflow:
User Form (S3)->`HTTP POST`-> `API Gateway`->`Code Execution (Lambda)` ->`Email Notification (SNS)`



## Key Features

* **Zero Server Maintenance:** No virtual machines (EC2) or continuous servers required; eliminates OS patching and scaling concerns.
* **Cost-Effective:** Operates on a **Pay-As-You-Go** model. Costs are virtually zero unless the form is actively being submitted.
* **High Scalability:** Built to handle any volume of traffic automatically, from a few submissions to thousands of submissions per second.
* **Robust Error Handling:** The JavaScript includes client-side safeguards to reliably report HTTP and JSON parsing errors back to the user.


## Deployment Instructions

1.  **Lambda Setup:** Deploy `lambda_function.py` to AWS Lambda, ensuring the **IAM Execution Role** includes `sns:Publish` permissions and the correct `SNS_TOPIC_ARN` is set.
2.  **SNS Setup:** Create an SNS Topic and confirm a subscription (e.g., an email address) to receive notifications.
3.  **API Gateway:** Create a new REST API with a `POST` method on a resource (e.g., `/contact`). **Crucially, enable Lambda Proxy Integration and CORS.**
4.  **Frontend Deployment:** Upload the modified `index.html` (with the correct API Gateway Invoke URL inserted) to an **S3 Bucket** configured for static website hosting.
